%*** TRRPO1.RDL
%***
%*** Copyright (c) 1990, Mincom Pty Ltd, Brisbane 4120, Australia.
%*** All rights reserved.
%***
%*** Revision History ***
%*** 11-April-13 MarkC       Version 0002
%*** .....................   Amended so that only the first part number and mnemonic 
%*** .....................   is reported, rather than up to 3 part numbers and mnemonics 
%*** 14-Mar-13  paul         Removes Suppress PG heading
%*** 13-Mar-13  paul         change to trrpo1 from esrpo1
%*** 01-Mar-12  E Fredeluces SC3885180
%*** .....................   Due to District consolidation the
%*** .....................   following changes will be done:
%*** .....................   1.  A report title to be renamed to
%*** .....................      'PURCHASE ORDER CONTROL REPORT - NON-STOCK & STOCK ITEMS'.
%*** .....................   2.  A report amended to contain 
%*** .....................       PO Item type description.
%*** .....................   3.  B report removed.
%*** .....................   4.  Output file created to contain PO  
%*** .....................       Stock items and the Control Report
%*** .....................       generated by calling ESRPO2.
%*** 04-Dec-09  EFredeluces  SC2590615
%*** .....................   Include two data items:
%*** .....................   1)  Price Code & Description
%*** .....................   2)  Delivery Code & Description
%*** 22-Feb-06  AIesho       P05110872
%*** .....................   Append the %DISTRICT-CODE% code to ORDER when
%*** .....................   searching for a printer.  This is part of the
%*** .....................   Ellipse Upgrade where every printer must be
%*** .....................   unique
%*** 06-Jun-05  AIesho       P05060270
%*** .....................   This program is a clone of ESRPOP. It will only
%*** .....................   print the control report
%***
%PROGRAM-ID
       TRRPO1
%AUTHOR
       David Gatward
%NARRATIVE
      **  Purchase Order Printing
%VERSION
       0002
%MODULE
       3210
%FILES
        MFILE = MSF061
        AFILE = MSF221
        LFILE = MSF010
        LFILE = MSF096
        LFILE = MSF100
        LFILE = MSFX05
        LFILE = MSF210
        LFILE = MSF220
        LFILE = MSF200
        LFILE = MSF231
        RFILE = TRRPO1A
        OFILE = TRTPO1A
%ROUTINES
       MSS110
       MSSCNV
%SELECTION
%*** Enter selection criteria for MSF061
       WHERE     (PART-1-061     = '3P', -
                 PART-2-061      = 'PO', -
                 DATA-1-061     >= %DISTRICT-CODE% & %RUN-NO%)
       SELECTIF (%MED-1%        <> SPACES, MEDIUM-3P  = %MED-1%)
       SELECTIF (%MED-2%        <> SPACES, MEDIUM-3P  = %MED-2%)
       SELECTIF (%MED-3%        <> SPACES, MEDIUM-3P  = %MED-3%)
       SELECTIF (%MED-4%        <> SPACES, MEDIUM-3P  = %MED-4%)
       REJECTIF (PO-NO-PO       <> %PONO%, %PONO%    <> SPACES)
       STOPIF   (DSTRCT-CODE-3P  > %DISTRICT-CODE%)
       STOPIF   (PRINT-RUN-NO-3P > %RUN-NO%)
%ORDER
       WHOUSE-ID     VIA (D)
       PURCH-OFFICER VIA (SUP)
       SUPPLIER-NO   VIA (SUP)
       PO-NO         VIA (SUP)
       PO-ITEM-NO    VIA (D)
%CONTROL-BREAKS
%*** List names of 3 control break fields
       WHOUSE-ID      VIA (D)
       PURCH-OFFICER  VIA (SUP)
       SUPPLIER-NO    VIA (SUP)
       PO-NO          VIA (SUP)
       PO-ITEM-NO     VIA (D)
%REPORT
       A
%REPORT-TITLE
       'PURCHASE ORDER PRINT CONTROL REPORT - NON-STOCK & STOCK ITEMS'
%PAGE HEADING
'Print Run No.'RRRR
                                  'Stock Code/ Heading Narrative'                         'Quantity/   Gross Price/'
  'Order No.  Order Date  Due Date Purch.Req.  Desc. and Part Number'                          'UOP      Net Price           Value'
%*** Control Break headings for up to 3 control level(s)
%BREAK WHOUSE-ID VIA (D) ON NEW-PAGE RESET-PAGE-COUNT
              'Selection Criteria:'

                             'Print Run Number      : 'RRRR
                             'Medium                : '{M1}
<SUPPRESS>
                                                       {M2}
<SUPPRESS>
                                                       {M3}
<SUPPRESS>
                                                       {M4}
                             'Warehouse ID          : '{WHOUSEI}
                             'Output Device         : '{O1}
                             'Control Report Medium : '{C1}
                             'Purchase Order        : '{PONO}

%BREAK PURCH-OFFICER VIA (SUP) HEADING ON NEW-PAGE
%BREAK SUPPLIER-NO VIA (SUP) HEADING TEST-PAGE (3)
<IF (AI <> SPACES, AI = PO221) OR PO221 <> SPACES>
                                       'Supplier          : '{SUP } {SNAME                                 }
<ENDIF>
%BREAK PO-NO VIA (SUP)  
<IF (AI <> SPACES, AI = PO221) OR PO221 <> SPACES>
                                       'Delivery Code     : '{DL} {DLOCDESC                              }
                                       'Purchasing Officer: '{POFF    } {PODESC                                           }
 {AM     }                                     {NARTIVE                                                    }
    <REPEAT>
    <SUPPRESS>
                                               {NARTIVE                                                    }
    <ENDREPEAT>
<ENDIF>
%DETAIL TEST-PAGE (2)
<IF (AI <> SPACES, AI = PO221) OR PO221 <> SPACES>
<IF IT = 'O' OR IT = 'C'>

  DDD {TYDESC} {ODATE  } {DT     } {STK      } {INAME                                 } {QTY       } {GP          } {VAL         }
    <SUPPRESS>
                                               {D1                                    }
    <SUPPRESS>
                                               {D2                                    }
    <SUPPRESS>
                                               {D3                                    }
    <SUPPRESS>
                                               {D4                                    }
    <REPEAT>
    <SUPPRESS>
                                               {EXTDSTK                               }
    <ENDREPEAT>
  <IF AI <> SPACES>
 '*** Change Order *** count='{CC}             {MNEM  } {PART                       }           YYYY {NP          }
  <ELSE>
                                               {MNEM  } {PART                       }           YYYY {NP          }
  <ENDIF>
<ELSE>

  DDD {TYDESC} {ODATE  } {DT     } BBBBBBLGGG  {ID1                                   } {QTY       } {GP          } {VAL         }
    <SUPPRESS>
                                               {ID2                                   }
    <SUPPRESS>
                                               {ID3                                   }
    <SUPPRESS>
                                               {ID4                                   }
  <REPEAT>
                                               {PEXTD                                 }
  <ENDREPEAT>
  <IF AI <> SPACES>
 '*** Change Order *** count='{CC}             {PRMNEM} {PRPARTNO                  }            YYYY {NP          }
  <ELSE>
                                               {PRMNEM} {PRPARTNO                   }           YYYY {NP          }
  <ENDIF>
<ENDIF>
              'Price Code : '{PR}{PRCDESC                               }
<ENDIF>
%*** Control Break footings for up to 3 control level(s)
%BREAK SUPPLIER-NO VIA (SUP) FOOTING
<IF WHI <> SPACES>
                                                                                                                  '---------------'
                                                                                       'TOTAL FOR SUPPLIER'{SUP }  {STOT         }
                                                                                                                  '---------------'
<ENDIF>
%BREAK PURCH-OFFICER VIA (SUP) FOOTING
<IF WHI <> SPACES>
                                                                                                                  '---------------'
                                                                                       'TOTAL FOR BUYER'{POFF    } {STOT         }
                                                                                                                  '---------------'
<ENDIF>
%BREAK WHOUSE-ID VIA (D) FOOTING
<IF WHI <> SPACES>                                                                                   
                                                                                                                  '---------------'
                                                                                       'TOTAL VALUE OF ORDERS'     {STOT         }
                                                                                                                  '---------------'
<ENDIF>
%CONTROL REPORT A
       PAGE-WIDTH  = 132
       PAGE-LENGTH = 60
       TRIM-REPORT
        DYNAMIC-PRINTER
        COPY-REQUEST = TRRPO2
%OUTPUT-FILE
        A
%CONTROL
        RECORD-LENGTH = 30 
%DETAIL
<IF PITYPE = 'O'>
{WHI}{POFF    }{SUP }AAAAAADDD
<ENDIF>
%REQUEST-PARAMETERS
       RUN-NO  PIC (X(4))   TEXT 'Run Number'
       MED-1   PIC (X(1))   TEXT 'Medium-1'
       MED-2   PIC (X(1))   TEXT 'Medium-2'
       MED-3   PIC (X(1))   TEXT 'Medium-3'
       MED-4   PIC (X(1))   TEXT 'Medium-4'
       PO-PRIN PIC (X(2))   TEXT 'Purchase Order Printer'
       WHOUSEI PIC (X(2))   TEXT 'Warehouse ID (Optional)'
       OUTD    PIC (X(2))   TEXT 'Output Device (Optional)'
       CONTRP  PIC (X(2))   TEXT 'Control Printer (Optional'
       PONO    PIC (X(6))   TEXT 'Purchase Order (Optional)'
       DEFPRIN LIKE PRINTER1 OF MSF080
%VARIABLES
       WHOUSEI = %WHOUSEI%  CONSTANT
       M1      = %MED-1%    CONSTANT
       M2      = %MED-2%    CONSTANT
       M3      = %MED-3%    CONSTANT
       M4      = %MED-4%    CONSTANT
       O1      = %OUTD%     CONSTANT
       C1      = %CONTRP%   CONSTANT
       PONO    = %PONO%     CONSTANT
       V       = ','        CONSTANT
       W       = '"'        CONSTANT
       DUM     = CHOOSE (1 IF (1=1),1)
       RDATE   = DATE()     CONSTANT
       R       = %RUN-NO%   CONSTANT
       A       = PO-NO-PO
       A1      = PO-NO-PO   SUPPRESS
       A2      = PO-NO-PO
       AI      = PO-ITEM-NO-PO
       A10     = choose(AI IF(AI <> SPACES), AI)
       C = PAGE()
       D = PO-ITEM-NO FROM MSF221 WHERE (PO-NO = PO-NO-PO, -
           PO-ITEM-NO >= A10) SELECTIF (A10 = SPACES) -
           SELECTIF (A10 = '000') -
           REJECTIF (WHOUSE-ID <> WHOUSEI, WHOUSEI <> SPACES) -
           SELECTIF (A10 <> SPACES, A10 <> '000', PO-ITEM-NO = A10) -
           STOPIF (A10 <> SPACES, A10 <> '000', PO-ITEM-NO > A10)
       IREQI  = ISSUE-REQ     VIA (D)
       WHI    = WHOUSE-ID     VIA (D)
       PITYPE = PO-ITEM-TYPE  VIA (D)
       TYDESC = choose ('Stock   ' IF (PITYPE = 'O'), -
                        'Consign ' IF (PITYPE = 'C'), -
                        'Dir-Delv' IF (PITYPE = 'D'), -
                        'Pur-Reqn' IF (PITYPE = 'P'), -
                        'Service ' IF (PITYPE = 'S'), -
                        'Fld-Rel ' IF (PITYPE = 'F'), -
                        'Unknown ')
       PO221   = PO-NO         VIA (D)
       AX      = PO-NO-PO
       AW      = catenate (AX,'-',WHI) I-PIC (X(9))
       AO      = catenate (AX,'   ')   I-PIC (X(9))
       AM      = choose   (AW  IF(WHI <> SPACES, %DISTRICT-CODE% = 'GRID'), -
                           AO) I-PIC (X(9)) SUPPRESS
%* MSF220
       SUP = SUPPLIER-NO OF MSF220 WHERE (PO-NO = PO221)
       POXMIT = PO-XMIT-VERSION VIA (SUP)
       POFF = PURCH-OFFICER     VIA (SUP)
       DL = DELIV-LOCATION      VIA (SUP)
       DLDESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE = 'DN', -
                       TABLE-CODE = DL)
       DLOCDESC = CHOOSE (DLDESC IF (DLDESC <> SPACES), -
                         '*** Unknown ***')  
       SRTFLD = catenate(WHI,POFF)
       FPAPOFF = substr (POFF,1,3)
       PODESC1 = hrget  (EMPLOYEE-ID -
                        from ('MSSEMP,MSF810') -
                        key  (EMPLOYEE-ID = POFF)
       PODESC  = FORMATTED-NAME via (PODESC1)
       PHONE = WORK-PHONE-NO VIA (PODESC1)
       NTI   = NAME-TITLE VIA (PODESC1)
       NT1   = substr (NTI,1,1)
       NT2   = substr (NTI,2,1)
       NT3   = substr (NTI,3,1)
       NT4   = substr (NTI,4,1)
       NTLN  = choose (4 IF (NT4 <> SPACES), -
                       3 IF (NT3 <> SPACES), -
                       2 IF (NT2 <> SPACES), -
                       1 IF (NT1 <> SPACES), -
                       0)
       PODESCA = catenate (NT1, ' ', PODESC)
       PODESCB = catenate (NT1, NT2, ' ', PODESC)
       PODESCC = catenate (NT1, NT2, NT3, ' ', PODESC)
       PODESCD = catenate (NTI, ' ', PODESC)
       PODESCT = choose (PODESC  IF(NTLN = 0), -
                         PODESCA IF(NTLN = 1), -
                         PODESCB IF(NTLN = 2), -
                         PODESCC IF(NTLN = 3), -
                         PODESCD)
%*   DYNAMIC PRINTER
%*   Use the printer nominated in the 'Control Report' Parameter.
%*   Otherwise, use the default printer. 
       PRINA = choose (C1 IF (C1 <> SPACES), -
                      %DEFPRIN%)
       PRINX   = PRINTER (PRINA)
%*

       CONF = LIVE-CONF-IND VIA (SUP)
       SNAME = SUPPLIER-NAME OF MSF200 WHERE (SUPPLIER-NO = SUP)
       SADD1 = ORDER-ADDR-1 VIA (SNAME)
       SADD2 = ORDER-ADDR-2 VIA (SNAME)
       SADD3 = ORDER-ADDR-3 VIA (SNAME)
       PC = ORDER-ZIP VIA (SNAME)
    DELIV220 = DELIV-LOCATION VIA (SUP)
    DELIV221 = DELIV-LOCATION VIA (D)
    DELIV1   = CHOOSE(DELIV220 IF (WX-PO-CONS-DELIV-IND = 'Y' ) , DELIV221 ) -
                                                         I-PIC (X(4))
    DLV     = get (READ-TEXT FROM ('MSF096') -
                                CODE ('TT') -
                                KEY  ('DN  ',DELIV1)) -
                      MAX (5) -
                      TEXT-WIDTH (40)
       DLV1 = single (DLV (1))
       DLV2 = single (DLV (2))
       DLV3 = single (DLV (3))
       DLV4 = single (DLV (4))
       DLV5 = single (DLV (5))

       DELIV = TABLE-DESC OF MSF010 WHERE (TABLE-TYPE = 'DL', -
                TABLE-CODE = DELIV1)
       FRT1 = FREIGHT-CODE VIA (SUP)
       FRT9 = catenate (FRT1,9)
       FRTD = TABLE-DESC OF MSF010 WHERE (TABLE-TYPE = 'FR', -
                TABLE-CODE >= FRT1) -
              STOPIF (TABLE-CODE > FRT9) MAX (5)

       OCONTACT = ORDER-CONTACT VIA (SNAME)
       ATTN = GET (READ-TEXT FROM ('MSF096') CODE ('NT') -
                     KEY ('AL', A)) MAX (1)
       ATSIZE = SIZE (ATTN)
       INARR = GET (READ-TEXT FROM ('MSF096') CODE ('NT') -
                     KEY ('1', A, D)) MAX (99)
       HNARR = GET (READ-TEXT FROM ('MSF096') CODE ('NT') -
                     KEY ('2', A)) MAX (99)
       FNARR = GET (READ-TEXT FROM ('MSF096') CODE ('NT') -
                     KEY ('3', A)) MAX (99)
       ANARR = GET (READ-TEXT FROM ('MSF096') CODE ('NT') -
                     KEY ('6', A)) MAX (99)
       SUPGLOB = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PC ') -
                      SUPPLIER-VALUE (SUP)) MAX (99)
       SUPDST = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PC ') -
                      DISTRICT-VALUE (%DISTRICT-CODE%) SUPPLIER-VALUE (SUP)) MAX (99)
       SUPGLOB1 = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PG ') -
                      SUPPLIER-VALUE (SUP)) MAX (99)
       SUPDST1 = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PD ') -
                      DISTRICT-VALUE (%DISTRICT-CODE%) SUPPLIER-VALUE (SUP)) MAX (99)
       STAT = STATUS-221 VIA (D)
       CC = CHANGE-COUNT VIA (D)
       QUANT = CURR-QTY-P VIA (D)
       QUANT1 = calc (QUANT * 1) I-PIC (S9(9)) 
       Q-DEC = calc ((QUANT - QUANT1) * 100) I-PIC (9(9)V9(2))
       EQ = choose (0 IF (STAT = '3'), QUANT)

       E = choose (EQ IF (Q-DEC <> 0), EQ) I-PIC (9(9)V9(2))
       E1 = choose (EQ IF (Q-DEC = 0), EQ) I-PIC (9(9))

       F = UNIT-OF-PURCH VIA (D)
       F1 = UNIT-OF-PURCH VIA (D)
       IT = PO-ITEM-TYPE VIA (D)
       PDI = PO-DESC-IND VIA (D)
       STK1 = STOCK-CODE VIA (D)
       PR = PRICE-CODE VIA (D)
       PRCDESC  = TABLE-DESC OF MSF010 -
                  WHERE (TABLE-TYPE = 'PC', -
                         TABLE-CODE = PR)
       STK = choose (STK1 IF (IT = 'O' OR IT = 'C'), SPACES)
       INAME = ITEM-NAME OF MSF100 WHERE (STOCK-CODE = STK1)
       MNEM1 = MNEMONIC-1 OF MSS110 WHERE (DSTRCT-CODE = %DISTRICT-CODE%, -
                      STOCK-CODE = STK, SUPPLIER-NO = SUP, PRICE-CODE = PR)
       PART1 = PART-NO-1 VIA (MNEM1)
       MNEM2 = MNEMONIC-2 VIA (MNEM1)
       PART2 = PART-NO-2 VIA (MNEM1)
       MNEM3 = MNEMONIC-3 VIA (MNEM1)
       PART3 = PART-NO-3 VIA (MNEM1)
       MNEM = MNEMONIC VIA (MNEM1)
       PART = PART-NO VIA (MNEM1)
       MNEML1 = TABLE-DESC OF MSF010 WHERE (TABLE-TYPE = 'AA', -
                                           TABLE-CODE = MNEM1)
       MN1 = choose (MNEML1 IF (MNEML1 <> SPACES), MNEM1)
       MNEML2 = TABLE-DESC OF MSF010 WHERE (TABLE-TYPE = 'AA', -
                                           TABLE-CODE = MNEM2)
       MN2 = choose (MNEML2 IF (MNEML2 <> SPACES), MNEM2)
       MNEML3 = TABLE-DESC OF MSF010 WHERE (TABLE-TYPE = 'AA', -
                                           TABLE-CODE = MNEM3)
       MN3 = choose (MNEML3 IF (MNEML3 <> SPACES), MNEM3)
       D1 = DESC-LINE-1 VIA (INAME)
       D2 = DESC-LINE-2 VIA (INAME)
       D3 = DESC-LINE-3 VIA (INAME)
       D4 = DESC-LINE-4 VIA (INAME)
       EXTDSTK = GET (READ-TEXT FROM ('MSF096') CODE ('SC') KEY (STK1)) MAX (99)
       DC = DSTRCT-CODE VIA (SUP)
       B = PURCH-REQ VIA (D)
       G = PREQ-ITEM VIA (D)
       ID1 = ITEM-DESC1 OF MSF231 WHERE (DSTRCT-CODE = DC, -
            PREQ-NO = B, PREQ-ITEM-NO = G) IF (IT <> 'O', IT <> 'C')
       ID2 = ITEM-DESC2 VIA (ID1) IF (IT <> 'O', IT <> 'C')
       ID3 = ITEM-DESC3 VIA (ID1) IF (IT <> 'O', IT <> 'C')
       ID4 = ITEM-DESC4 VIA (ID1) IF (IT <> 'O', IT <> 'C')
       PRMNEM = MNEMONIC VIA (ID1)
       REQTYP = REQ-TYPE VIA (ID1)
       DUMYQTY = 0   CONSTANT
       DUMYUNT = '   ' CONSTANT
       X   = CHOOSE(DUMYQTY IF (PITYPE = 'S'), E) I-PIC (9(9)V9(2)) FORMAT (BWZ)  
       X1  = CHOOSE(DUMYQTY IF (PITYPE = 'S'), E1) I-PIC (9(9)) FORMAT (BWZ)
       Y   = CHOOSE(DUMYUNT IF (PITYPE = 'S'), F)
       PRMNEML = TABLE-DESC OF MSF010 WHERE (TABLE-TYPE = 'AA', -
                                             TABLE-CODE = PRMNEM)
       PRMN = choose (PRMNEML IF (PRMNEML <> SPACES), PRMNEM)
       PRPARTNO = PART-NO VIA (ID1)
       MN = choose (MN1 IF (IT = 'O' OR IT = 'C'), PRMN)
       PARTX = choose (PART1 IF (IT = 'O' OR IT = 'C'), PRPARTNO)
       PEXTD = GET (READ-TEXT FROM ('MSF096') CODE ('PR') -
                  KEY (DC,B,G)) MAX (99)
       I = FPA-ID VIA (D)
       L = '/'
       J = FPA-ITEM-NO VIA (D)
       S = '@'
       K = CURR-NET-PR-P VIA (D) PIC ($(9)9.99)
       L1 = 'Item Total'
       L2 = 'Order Total'
       N1 = calc (K * EQ) PIC ($(10)9.99)
       N = choose (K IF (EQ=0 AND IT='S' AND STAT <> '3'),N1) PIC ($(10)9.99)
       DT1 = CURR-DUE-DATE VIA (D)
       DT = GET (DISPLAY-DATE FROM (DT1))
       P = '%'
       DS1 = SETTLE-PC-A VIA (D) PIC (ZZ9.99)
       O = SETTLE-DAYS-A VIA (D) PIC 999
       DS2 = SETTLE-PC-B VIA (D) PIC (ZZ9.99)
       Q = SETTLE-DAYS-B VIA (D) PIC 999
       ODATE1 = ORDER-DATE VIA (SUP)
       ODATE2 = GET (DISPLAY-DATE FROM (ODATE1))
       ODATE3 = ODATE2 PIC (X(9)) SUPPRESS
       ODATE = CHOOSE (ODATE3 IF (A1 = SPACES), ODATE2)
       OTOT = total (N) PIC ($(10)9.99)
       QTY = CURR-QTY-P VIA (D) PIC (-(8)9.99)
       GP = GROSS-PRICE-P VIA (D) PIC (-(10)9.99)
       NP = CURR-NET-PR-P VIA (D) PIC (-(10)9.99)
       VAL = calc (QTY * NP)
       STOT = total (VAL)
       STKGLOB = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PC') -
                      STOCK-CODE-VALUE (STK1)) MAX (99)
       STKDST = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PC') -
                      DISTRICT-VALUE (%DISTRICT-CODE%) STOCK-CODE-VALUE (STK1)) MAX (99)
       SUPSTKGLOB = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PC') -
                      SUPPLIER-VALUE (SUP) STOCK-CODE-VALUE (STK1)) MAX (99)
       SUPSTKDST = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PC') -
                      DISTRICT-VALUE (%DISTRICT-CODE%) SUPPLIER-VALUE (SUP) -
                      STOCK-CODE-VALUE (STK1)) MAX (99)

       STKGLOB1 = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PG') -
                      STOCK-CODE-VALUE (STK1)) MAX (99)
       STKDST1 = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PD') -
                      DISTRICT-VALUE (%DISTRICT-CODE%) STOCK-CODE-VALUE (STK1)) MAX (99)
       SUPSTKGLB1 = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PG') -
                      SUPPLIER-VALUE (SUP) STOCK-CODE-VALUE (STK1)) MAX (99)
       SUPSTKDST1 = GET (READ-TEXT FROM ('MSF096') CODE ('CS') TYPE ('PD') -
                      DISTRICT-VALUE (%DISTRICT-CODE%) SUPPLIER-VALUE (SUP) -
                      STOCK-CODE-VALUE (STK1)) MAX (99)
       CL  = CLAUSE-ID       OF MSFX05       -
            WHERE (CLAUSE-ENT-TYPE = 'O',   -
                   CLAUSE-ENT-ID   = A & D & POXMIT, -
                   CLAUSE-PRT-SEQ >= SPACES) -
            MAX (10)
       PO   = CLAUSE-ID     VIA (CL)
       XVER = CLAUSE-VER-NO VIA (CL)
       IDVR = CATENATE (PO, XVER)
       P0   = PUT    (IDVR) MAX (10)
       P1   = SINGLE (P0   (1))
       P2   = SINGLE (P0   (2))
       P3   = SINGLE (P0   (3))
       P4   = SINGLE (P0   (4))
       P5   = SINGLE (P0   (5))
       P6   = SINGLE (P0   (6))
       P7   = SINGLE (P0   (7))
       P8   = SINGLE (P0   (8))
       P9   = SINGLE (P0   (9))
       P10  = SINGLE (P0  (10))
       POC = CHOOSE ('See Clause(s):' IF (P1 <> SPACES), SPACES)
       POC1 = CHOOSE ('PURCHASE ORDER CLAUSES' IF (P1 <> SPACES), SPACES)

       POCL1 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P1)) MAX (99)
       POCL2 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P2)) MAX (99)
       POCL3 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P3)) MAX (99)
       POCL4 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P4)) MAX (99)
       POCL5 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P5)) MAX (99)
       POCL6 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P6)) MAX (99)
       POCL7 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P7)) MAX (99)
       POCL8 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P8)) MAX (99)
       POCL9 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P9)) MAX (99)
       POCL10 = GET (READ-TEXT FROM ('MSF096') -
                             CODE ('PC') KEY (P10)) MAX (99)
%* DG 23/6/94 Add General Text for footing - put sales tax text in here so it 
%*   can be deleted on-line when sites have correct stationary.
       POFOOT = GET (READ-TEXT FROM ('MSF096') CODE ('GT') -
                     KEY ('POFOOT')) MAX (20)
%* DG 23/6/94 Add General Text for purchasing on behalf of PacificGrid
       POGRIDT = GET (READ-TEXT FROM ('MSF096') CODE ('GT') -
                     KEY ('POGRID')) MAX (2)
       ORGIND = ASSOC-CHAR-1 OF MSF010 WHERE (TABLE-TYPE = '3D', -
                                             TABLE-CODE = %DISTRICT-CODE%)
%* Note 3d table file classifies dist's 1=PP, 2=Grid.
       POGRID = CHOOSE (POGRIDT IF (ORGIND = '2'), SPACES)

%* IG 21/10/2003
       DESC1X = CATENATE (INAME, D1)
       DESC1 = OUT-STRING OF MSSCNV -
               WHERE (OPTION     = 'P', -
                     INP-STRING  = DESC1X)
       DESC2X = CATENATE (ID1, ID2)
       DESC2 = OUT-STRING OF MSSCNV -
               WHERE (OPTION     = 'P', -
                     INP-STRING  = DESC2X)
%* AIesho Add Narrative
      NARTIVE = GET (READ-TEXT FROM ('MSF096') CODE ('NT' ) KEY('2' ,PO-NO-PO )) MAX(20 ) TEXT-WIDTH(60 )
      NZ      = size (NARTIVE)
%**** End of Program *********************************************************

%*'--------1---------2---------3---------4---------5---------6---------7---------8-------|'
%*'234567890123456789012345678901234567890123456789012345678901234567890123456789012345678'
