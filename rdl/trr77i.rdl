%*** Revision History:
%*** 18-Feb-2013  AIT IGianakis Phase 1 New requirements
%***                            Individual Training Report 
%*
%PROGRAM-ID
    TRR77I
%AUTHOR
    AIT 
%NARRATIVE
    This report will be used to review employees and non employees 
    training history.
    V001 - AIT Initial Code
    V002 - AIT Added employee and organisatin to output file header.
           Changed course deliv method to display h/c acronymns
           Fixed PC01-03 to be 02-04 instead.
    V003 - AIT when excluding ZO category only exclude emps with 
         - ZO category and DUMMY position;
         - print number of chars in Employee id. No leading zeros.
    V004 - AIT cleanup CSV headings and change expiry date to Requal Date
         - Org description to display for non-emps too.    
         - fix summary - no recs line - change TOTAL to SUM
         - all names (emps/mon-emps) to display as SURNAME,FIRST NAME
    V005 - not display requalification date if the requal units = 0. 
           Without this change, the requal date shows as the same date 
           the training course started in the past.
    V006 - include terminated emps 
%MODULE
    3770
%VERSION
    005
%FILES
    MFILE = MSF772 
    LFILE = MSF010
    LFILE = MSF200
    LFILE = MSF500
    LFILE = MSF760
    LFILE = MSF770
    LFILE = MSF771
    LFILE = MSF811
    LFILE = MSF810
    LFILE = MSF820
    LFILE = MSF878A
    RFILE = TRR77IA
    OFILE = TRT77IA
%ROUTINES
    MSSDAT
    MSSCNV
%SELECTION
%** Employee Id is Mandatory in 081 - should always search for a 
%**   single employee's training history
<IF %EMPTYP% <> SPACES>
       WHERE    (ATTENDEE-TY   = %EMPTYP%, -
                 EMPLOYEE-ID   = %EMPID%,  -
                 COURSE-ID    >= SPACES)
<ELSE >
       WHERE    (ATTENDEE-TY   >= SPACES)
<ENDIF>
%ORDER
    DUM                       TEXT General-Header
    ASCENDING   COMP-DTE-INV  TEXT Completion-Date
%BREAK-FIELDS
    DUM
    EMPID
    COURSE-ID
%REPORT 
    A 
%CONTROL
    PAGE-LENGTH = 60
    PAGE-WIDTH = 132
%TITLE
'INDIVIDUAL TRAINING HISTORY'
%PAGE HEADING
'-----------------------------------------------------------------------------------------------------------------------------------'
'Course Name                   |CDel     |Sess |Session                  |Att Stat    |Result                     |Date    |Requal'
'                              |Meth     | ID  |Delivery Method          |TrainerTy(s)|Trainer Name(s)            |Gained  |Date  '
%BREAK EMPID HEADING ON NEW-PAGE SUPPRESS-PAGE-HEADING TEST-PAGE (12)
<IF SELSW = 'Y'>

    'Employee Id:   '{EMPID}
    'Employee Name: '{NAME                        } 'Employee Type: '{EMPTY-DESC}
    'Organisation:  '{ORG                         }
    'Business Unit: '{PC02-DESC                   }
    'Group: '        {PC03-DESC                   }
    'Branch: '       {PC04-DESC                   }
%*       1         2         3         4         5         6         7         8         9         10        11        12        13 
%*3456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
'-----------------------------------------------------------------------------------------------------------------------------------'
'Course Name                   |CDel     |Sess |Session                  |Att Stat    |Result                     |Date    |Requal'
'                              |Meth     | ID  |Delivery Method          |TrainerTy(s)|Trainer Name(s)            |Gained  |Date  '
'-----------------------------------------------------------------------------------------------------------------------------------'
<ENDIF>
%DETAIL
<IF (SELSW = 'Y')> 
 {CRS-TTL                     }Z{CDM    }Z{SSD}Z{DELM-DESC              }Z{ST-DESC   }Z{SRST-DESC                }Z{DTGAIN}Z{RQDTE }
 <SUPPRESS>   
                                                                         Z{TT1       }Z{TRNAME1                                    }
 <SUPPRESS>
                                                                         Z{TT2       }Z{TRNAME2                                    }
 <SUPPRESS>
                                                                         Z{TT3       }Z{TRNAME3                                    }
 <SUPPRESS>
                                                                         Z{TT4       }Z{TRNAME4                                    }
 <SUPPRESS>
                                                                         Z{TT5       }Z{TRNAME5                                    }
<ENDIF>
%BREAK COURSE-ID FOOTER
<IF (SELSW = 'Y')> 

<ENDIF>
%REPORT-SUMMARY
<IF TTL = ZERO>


    'No Courses/Sessions for the nominated employee'
<ELSE>
'-----------------------------------------------------------------------------------------------------------------------------------'
<ENDIF>

'                                                   ***  End Of Report  ***'  
%OUTPUT-FILE
   A
%CONTROL
   RECORD-LENGTH = 650
%BREAK-FIELDS
    DUM
%BREAK DUM HEADER 
'Employee Name:'VX{NAME                        }X
'Employee Type:'V{EMPTY-DESC}
'Organisation:'V{ORG                         }
'Business Unit:'V{PC02-DESC                   }
'Group: 'V{PC03-DESC                   }
'Branch: 'V{PC04-DESC                   }

'Course Name,Course Delivery Method,Session ID,Session Delivery Method' -
',Attendee Status, Trainer Type1, Trainer1, Trainer Type2, Trainer2'-
',Trainer Type3, Trainer3,Trainer Type4, Trainer4,Trainer Type5, Trainer5'-
',Result,Date Gained,Requal Date'
%DETAIL
<IF SELSW = 'Y'> 
X{CRS-TTL                                          }XVX-
{CDLM-DESC                                        }XV{SSD}VX-
{DELM-DESC                                        }XV{ST-DESC  }VX-
{TT1D                                 }XVX{TRNAME1                             }XVX-
{TT2D                                 }XVX{TRNAME2                             }XVX-
{TT3D                                 }XVX{TRNAME3                             }XVX-
{TT4D                                 }XVX{TRNAME4                             }XVX-
{TT5D                                 }XVX{TRNAME5                             }XVX-
{SRST-DESC                   }XV{DTGAIN}V{RQDTE }
<ENDIF>
%REQUEST-PARAMETERS
    EMPTYP  PIC (X(1))    TEXT 'Employee-Type ('E'mployee/'N'on-Employee) :'
    EMPID   PIC (X(10))   TEXT 'Employee-Id                               :'
%VARIABLES
%* Constants
    Z = '|' CONSTANT
    V = ',' CONSTANT
    X = '"' CONSTANT
    DUMMY = 'Y' CONSTANT
    DUM = CHOOSE ('Y' IF (1 = 1), DUMMY)
    TDY = WX-TODAYS-DATE CONSTANT
    
%* MSF772 fields
    CID = COURSE-ID
    SES = SESSION-NO
    A = ATTENDEE-TY
    EMP    = EMPLOYEE-ID
    ATT-ST   = ATTEND-STATUS 
    ATT-RSLT = ATTEND-RESULT
    
    EEMP = HRGET  (EMPLOYEE-ID FROM ('MSF810,MSSEMP') -
                       KEY(EMPLOYEE-ID = EMP ))
    EMP-NAME = FORMATTED-NAME VIA (EEMP)
    EMP-SNAME = SURNAME OF MSF810 -
                WHERE (EMPLOYEE-ID = EEMP)
    EMP-FNAME = FIRST-NAME VIA (EMP-SNAME)
    EMP-CSVX = CATENATE (EMP-SNAME,',',EMP-FNAME)
    EMP-CSV = OUT-STRING OF MSSCNV -
              WHERE (OPTION = 'P', -
                     INP-STRING = EMP-CSVX)
    EMPTY-DESC = CHOOSE ('Employee' IF (A = 'E'), -
                         'Non-Employee')
    RCDATE9 = COMP-DTE-INV-9
    CDATE  = CALC (99999999 - RCDATE9) I-PIC 9(8)
    RTDATE9 = INV-TARGET-DATE-9
    TDATE  = CALC (99999999 - RTDATE9) I-PIC 9(8)
    
%* MSF771 Training Session fields
    CID771  = COURSE-ID OF MSF771 -
           WHERE (COURSE-ID = CID, -
                  SESSION-NO = SES)
    TLOC = TRN-LOCATION VIA (CID771)
    SES771  = SESSION-NO VIA (CID771)
    
%*    SES9 = CHOOSE (SESSION-NO IF (SESSION-NO <> SPACES), -
%*                     SESSION-NO) I-PIC 9(5)

    SES9 = CHOOSE (SES IF (SES <> SPACES), -
                       ZEROS)  I-PIC 9(5)
    SSD  = CHOOSE (SES9 IF (SES9 <> 0), 0) D-PIC 9(5)
    DM  = DELIVERY-METHOD VIA (CID771)
    TRNER1 = TRAINER-1 VIA (CID771)
    TRNTYP1 = TRAINER-1-TYPE VIA (CID771)
    TRNER2 = TRAINER-2 VIA (CID771)
    TRNTYP2 = TRAINER-2-TYPE VIA (CID771)
    TRNER3 = TRAINER-3 VIA (CID771)
    TRNTYP3 = TRAINER-3-TYPE VIA (CID771)
    TRNER4 = TRAINER-4 VIA (CID771)
    TRNTYP4 = TRAINER-4-TYPE VIA (CID771)
    TRNER5 = TRAINER-5 VIA (CID771)
    TRNTYP5 = TRAINER-5-TYPE VIA (CID771)
%* trainer 1
    TRNAME1X  = HRGET  (EMPLOYEE-ID FROM ('MSF810,MSSEMP') -
                          KEY (EMPLOYEE-ID = TRNER1))
    TRNAME1E  = FORMATTED-NAME VIA (TRNAME1X)
    TRF1        = FIRST-NAME OF MSF811 -
                  WHERE (NON-EMPL-ID = TRNER1)
    TRS1        = SURNAME VIA (TRF1)
    TRNAME1NX = CATENATE (TRS1,',',TRF1)
    TRNAME1N = OUT-STRING OF MSSCNV -
                 WHERE (OPTION = 'P', -
                        INP-STRING = TRNAME1NX)
    TRNAME1 = CHOOSE (TRNAME1E IF (TRNTYP1 = '1'), -
                      TRNAME1E IF (TRNTYP1 = '2'), -
                      TRNAME1E IF (TRNTYP1 = '3'), -
                      TRNAME1N IF (TRF1 <> SPACES), -
                      TRNAME1N IF (TRS1 <> SPACES), -
                      SPACES)
%* trainer 2                     
    TRNAME2X = HRGET  (EMPLOYEE-ID FROM ('MSF810,MSSEMP') -
                       KEY (EMPLOYEE-ID = TRNER2))
    TRNAME2E = FORMATTED-NAME VIA (TRNAME2X)
    TRF2 = FIRST-NAME OF MSF811 -
                WHERE (NON-EMPL-ID = TRNER2)
    TRS2 = SURNAME VIA (TRF2)
    TRNAME2NX = CATENATE (TRS2,',',TRF2)
    TRNAME2N = OUT-STRING OF MSSCNV -
              WHERE (OPTION = 'P', -
                     INP-STRING = TRNAME2NX)
    TRNAME2 = CHOOSE (TRNAME2E IF (TRNTYP2 = '1'), -
                      TRNAME2E IF (TRNTYP2 = '2'), -
                      TRNAME2E IF (TRNTYP2 = '3'), -
                      TRNAME2N IF (TRF2 <> SPACES), -
                      TRNAME2N IF (TRS2 <> SPACES), -
                      SPACES)
%* trainer 3                     
    TRNAME3X = HRGET  (EMPLOYEE-ID FROM ('MSF810,MSSEMP') -
                       KEY (EMPLOYEE-ID = TRNER3 ))
    TRNAME3E = FORMATTED-NAME VIA (TRNAME3X)
    TRF3 = FIRST-NAME OF MSF811 -
                WHERE (NON-EMPL-ID = TRNER3)
    TRS3 = SURNAME VIA (TRF3)
    TRNAME3NX = CATENATE (TRS3,',',TRF3)
    TRNAME3N = OUT-STRING OF MSSCNV -
              WHERE (OPTION = 'P', -
                     INP-STRING = TRNAME3NX)
    TRNAME3 = CHOOSE (TRNAME3E IF (TRNTYP3 = '1'), -
                      TRNAME3E IF (TRNTYP3 = '2'), -
                      TRNAME3E IF (TRNTYP3 = '3'), -
                      TRNAME3N IF (TRF3 <> SPACES), -
                      TRNAME3N IF (TRS3 <> SPACES), -
                      SPACES)
%* trainer 4                     
    TRNAME4X = HRGET  (EMPLOYEE-ID FROM ('MSF810,MSSEMP') -
                       KEY (EMPLOYEE-ID = TRNER4 ))
    TRNAME4E = FORMATTED-NAME VIA (TRNAME4X)
    TRF4 = FIRST-NAME OF MSF811 -
                WHERE (NON-EMPL-ID = TRNER4)
    TRS4 = SURNAME VIA (TRF4)
    TRNAME4NX = CATENATE (TRS4,',',TRF4)
    TRNAME4N = OUT-STRING OF MSSCNV -
              WHERE (OPTION = 'P', -
                     INP-STRING = TRNAME4NX)
    TRNAME4 = CHOOSE (TRNAME4E IF (TRNTYP4 = '1'), -
                      TRNAME4E IF (TRNTYP4 = '2'), -
                      TRNAME4E IF (TRNTYP4 = '3'), -
                      TRNAME4N IF (TRF4 <> SPACES), -
                      TRNAME4N IF (TRS4 <> SPACES), -
                      SPACES)
%* trainer 5                     
    TRNAME5X = HRGET  (EMPLOYEE-ID FROM ('MSF810,MSSEMP') -
                       KEY (EMPLOYEE-ID = TRNER5 ))
    TRNAME5E = FORMATTED-NAME VIA (TRNAME5X)
    TRF5 = FIRST-NAME OF MSF811 -
                WHERE (NON-EMPL-ID = TRNER5)
    TRS5 = SURNAME VIA (TRF5)
    TRNAME5NX = CATENATE (TRS5,',',TRF5)
    TRNAME5N = OUT-STRING OF MSSCNV -
              WHERE (OPTION = 'P', -
                     INP-STRING = TRNAME5NX)
    TRNAME5 = CHOOSE (TRNAME5E IF (TRNTYP5 = '1'), -
                      TRNAME5E IF (TRNTYP5 = '2'), -
                      TRNAME5E IF (TRNTYP5 = '3'), -
                      TRNAME5N IF (TRF5 <> SPACES), -
                      TRNAME5N IF (TRS5 <> SPACES), -
                      SPACES)

%* MSF770 Training Course fields
    CRS-TTL = COURSE-TITLE OF MSF770          -
                WHERE (COURSE-ID     = CID,   -
                       MAJ-REV-RVSD >= '000') -
                MAX   (1)
    CDMX     = DELIVERY-METHOD VIA (CRS-TTL)
    CDM  = CHOOSE ('ILT' IF (CDMX = '1'), -
                   'KA'  IF (CDMX = '3'), -
                   'PA'  IF (CDMX = '4'), -
                   'EL'  IF (CDMX = '6'), -
                   'SPW' IF (CDMX = '7'), -
                   'ILT/KA' IF (CDMX = '8'), -
                   'ILT/KA/PA' IF (CDMX = '11'), -
                   'ILT/PA' IF (CDMX = '12'), -
                   'UNK')
%* MSF772 Training Attendance Fields

%*    ST-DESC  = CHOOSE ('NOMINATED'  IF (ATT-ST = 'N' ), -
%*                       'CONFIRMED'  IF (ATT-ST = 'F' ), -
%*                       'INCMPLETE'  IF (ATT-ST = 'I' ), -
%*                       'REJECTED'   IF (ATT-ST = 'R' ), -
%*                       'COMPLETED'  IF (ATT-ST = 'C' ), -
%*                       'APPROVED'   IF (ATT-ST = 'A' ), -
%*                        SPACES )
                        
    DTGAIN = DATE2 OF MSSDAT  -
             WHERE (OPTION     = '1',            -
                    DATE1      = RCDATE9,         -
                    DAYS       = ZERO,           -
                    REV-FORMAT = '1') FORMAT (DATE)
    
    RQLDT  = REQUAL-DATE FORMAT (DATE)
    RQLUNIT  = REQUAL-UNITS
    RQDTE  = CHOOSE (RQLDT IF (ATT-RSLT = 'DA', RQLUNIT > 0), -
                     RQLDT IF (ATT-RSLT = 'KP', RQLUNIT > 0), -
                     RQLDT IF (ATT-RSLT = 'PP', RQLUNIT > 0), -
                     RQLDT IF (ATT-RSLT = 'EC', RQLUNIT > 0), -
                     RQLDT IF (ATT-RSLT = 'SC', RQLUNIT > 0), -
                     SPACES) FORMAT (DATE)


%* MSF811 Non employee details

    NEF = FIRST-NAME OF MSF811 -
                WHERE (NON-EMPL-ID = EMP)
    NES = SURNAME        VIA (NEF)
    NE-NAMEX = CATENATE (NES,',',NEF)

    NE-NAME = OUT-STRING OF MSSCNV -
              WHERE (OPTION = 'P', -
                     INP-STRING = NE-NAMEX)
                     
    NAME = CHOOSE   (EMP-NAME IF (A = 'E'), -
                     NE-NAME  IF (A = 'N'), -
                     SPACES )
    NAMECSV = CHOOSE (EMP-CSV IF (A = 'E'), -
                     NE-NAME  IF (A = 'N'), -
                     SPACES )

    NE-SUPP = SUPPLIER-NO VIA (NEF)
    NE-SUPPD = SUPPLIER-NAME OF MSF200 -
               WHERE (SUPPLIER-NO = NE-SUPP)
    NE-CUST = CUSTOMER-NO VIA (NEF)
    NE-CUSTD = CUST-NAME OF MSF500 -
               WHERE (CUST-NO = NE-CUST)
    NE-ADDR1= POST-ADDRESS-1 VIA (NEF)
    NE-ORG1 = CHOOSE (NE-ADDR1 IF (NE-ADDR1 <> SPACES), 'UNKNOWN')
    NE-ORG2 = CHOOSE (NE-CUST IF (NE-CUST <> SPACES), NE-ORG1)
    NE-ORG2D = CHOOSE (NE-CUSTD IF (NE-CUSTD <> SPACES), NE-ORG1)
    NE-ORGD = CHOOSE (NE-SUPPD IF (NE-SUPPD <> SPACES), NE-ORG2D)
    NE-ORGV = CHOOSE (NE-SUPP IF (NE-SUPP <> SPACES), NE-ORG2)

%* Employee Position
    POS     = POSITION-ID OF MSF878A           -
              WHERE (EMPLOYEE-ID-1     = EMP, -
                     PRIMARY-POS-1     = '0')  -  
                     INV-STR-DATE-1   >= SPACES)  - 
              REJECTIF (POS-STOP-DATE-1 <> '00000000', -
                        POS-STOP-DATE-1 < TDY) -                     
              MAX (1)
    POSX = SUBSTR (POS,1,5)
    
%* Emp Status /Validation
    STAT  = EMP-STATUS OF MSF760 -
            WHERE   (EMPLOYEE-ID = EMP)
    SCAT  = STAFF-CATEG VIA (STAT)
%* removed in version 006
    SEL760 = CHOOSE ('N' IF (A = 'E', -
                             STAT <> 'A', -
                             STAT <> 'Z'), -
                     'N' IF (A = 'E', -
                             SCAT = 'ZO', -
                             POSX = 'DUMMY'), -
                     'N' IF (A = 'E', -
                             SCAT = 'WC'), -
                     'N' IF (A = 'E', -
                             SCAT = 'ZA'), -
                     'Y' IF (A = 'N'), -
                     'Y')

%* Pay Group  & PRC MSF820
    PGRP  = PAY-GROUP OF MSF820 -
            WHERE   (EMPLOYEE-ID = EMP)
%*    EMP5  = SUBSTR (EMP,6,5)
%*    EMP6  = SUBSTR (EMP,5,6)
    EMP9 = NUMERIC (EMP) I-PIC (Z(9)9)
    EMPX = CHOOSE (EMP9 IF (EMP9 <> ZEROS), EMP9) 
    PEMP  = CATENATE ('P',EMPX)
    CEMP  = CATENATE ('C',EMPX)
    EMPIDX = CHOOSE (PEMP IF (PGRP <> SPACES), -
                     CEMP IF (EMP9 <> ZEROS), SPACES)
    EMPID = OUT-STRING OF MSSCNV -
                 WHERE (OPTION = 'S', -
                        INP-STRING = EMPIDX)

    PRIM  = RPT-PRC VIA (PGRP)
%*
    PRIM1 = SUBSTR (PRIM,1,4)
    PRIM2 = SUBSTR (PRIM,5,4)
    PRIM3 = SUBSTR (PRIM,9,4)
    PRIM4 = SUBSTR (PRIM,13,4)
    PRIM5 = SUBSTR (PRIM,17,4)
%*
         
%* MSF010 table descriptions

    TLOC-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'TRNL', -
                       TABLE-CODE  = TLOC)
                       
    CDLM-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'DELM', -
                       TABLE-CODE  = CDMX)

    DELM-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'DELM', -
                       TABLE-CODE  = DM)
                       
    SRST-DESCX = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'TRRS', -
                       TABLE-CODE  = ATT-RSLT)
    CHECKDM  = ASSOC-REC VIA (SRST-DESCX) 
    CHECKDM1 = SUBSTR(CHECKDM,2,2)
    SHOWASTER = CHOOSE ('Y' IF (CHECKDM1 <> SPACES, -
                                DM <> CHECKDM1), 'N')
    SRST-DESCY = CATENATE('*',SRST-DESCX)
    SRST-DESC = CHOOSE (SRST-DESCY IF (SHOWASTER = 'Y'), -
                        SRST-DESCX)
                       
    ST-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'ATST', -
                       TABLE-CODE  = ATT-ST)
    PC01-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'PC01', -
                       TABLE-CODE  = PRIM1) 
    PC02-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'PC02', -
                       TABLE-CODE  = PRIM2) 
    PC03-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'PC03', -
                       TABLE-CODE  = PRIM3) 
    PC04-DESC = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'PC04', -
                       TABLE-CODE  = PRIM4)   
    TT1D = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'TRTP', -
                       TABLE-CODE  = TRNTYP1)   
    TT2D = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'TRTP', -
                       TABLE-CODE  = TRNTYP2)   
    TT3D = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'TRTP', -
                       TABLE-CODE  = TRNTYP3)   
    TT4D = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'TRTP', -
                       TABLE-CODE  = TRNTYP4)   
    TT5D = TABLE-DESC OF MSF010 -
                WHERE (TABLE-TYPE  = 'TRTP', -
                       TABLE-CODE  = TRNTYP5) 
    TT1 = CHOOSE ('Emp Trainer  :' IF (TRNTYP1 = '1'), -
                      'Emp Assessor :' IF (TRNTYP1 = '2'), -
                      'Emp Trn&Assr :' IF (TRNTYP1 = '3'), -
                      'Non-Emp Trnr :' IF (TRNTYP1 = '4'), -
                      'Non-Emp Assr :' IF (TRNTYP1 = '5'), -
                      'NEmp Trn&Assr:' IF (TRNTYP1 = '6'), -
                      'Employee     :' IF (TRNTYP1 = 'E'), -
                      'Tax Prd AdjNR:' IF (TRNTYP1 = 'N'), SPACES)      
    TT2 = CHOOSE ('Emp Trainer  :' IF (TRNTYP2 = '1'), -
                      'Emp Assessor :' IF (TRNTYP2 = '2'), -
                      'Emp Trn&Assr :' IF (TRNTYP2 = '3'), -
                      'Non-Emp Trnr :' IF (TRNTYP2 = '4'), -
                      'Non-Emp Assr :' IF (TRNTYP2 = '5'), -
                      'NEmp Trn&Assr:' IF (TRNTYP2 = '6'), -
                      'Employee     :' IF (TRNTYP2 = 'E'), -
                      'Tax Prd Adj NR:' IF (TRNTYP2 = 'N'), SPACES)     
    TT3 = CHOOSE ('Emp Trainer  :' IF (TRNTYP3 = '1'), -
                      'Emp Assessor :' IF (TRNTYP3 = '2'), -
                      'Emp Trn&Assr :' IF (TRNTYP3 = '3'), -
                      'Non-Emp Trnr :' IF (TRNTYP3 = '4'), -
                      'Non-Emp Assr :' IF (TRNTYP3 = '5'), -
                      'NEmp Trn&Assr:' IF (TRNTYP3 = '6'), -
                      'Employee     :' IF (TRNTYP3 = 'E'), -
                      'Tax Prd AdjNR:' IF (TRNTYP3 = 'N'), SPACES)      
    TT4 = CHOOSE ('Emp Trainer  :' IF (TRNTYP4 = '1'), -
                      'Emp Assessor :' IF (TRNTYP4 = '2'), -
                      'Emp Trn&Assr :' IF (TRNTYP4 = '3'), -
                      'Non-Emp Trnr :' IF (TRNTYP4 = '4'), -
                      'Non-Emp Assr :' IF (TRNTYP4 = '5'), -
                      'NEmp Trn&Assr:' IF (TRNTYP4 = '6'), -
                      'Employee     :' IF (TRNTYP4 = 'E'), -
                      'Tax Prd AdjNR:' IF (TRNTYP4 = 'N'), SPACES)      
    TT5 = CHOOSE ('Emp Trainer  :' IF (TRNTYP5 = '1'), -
                      'Emp Assessor :' IF (TRNTYP5 = '2'), -
                      'Emp Trn&Assr :' IF (TRNTYP5 = '3'), -
                      'Non-Emp Trnr :' IF (TRNTYP5 = '4'), -
                      'Non-Emp Assr :' IF (TRNTYP5 = '5'), -
                      'NEmp Trn&Assr:' IF (TRNTYP5 = '6'), -
                      'Employee     :' IF (TRNTYP5 = 'E'), -
                      'Tax Prd AdjNR:' IF (TRNTYP5 = 'N'), SPACES)
    ORG    = CHOOSE (NE-ORGD  IF (A <> 'E'), -
                     PC01-DESC IF (A = 'E'), -
                     SPACES)
%* Totals
    SELSW = CHOOSE ('Y' IF (ATT-ST <> SPACES,    -
                            SEL760 = 'Y'),    -
                    'N')
    CNT = CHOOSE (1 IF (SELSW = 'Y'), 0)
    TTL = SUM (CNT )
%*
%*      ***  End of Program  ***
%*
