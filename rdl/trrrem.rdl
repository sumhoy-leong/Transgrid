%***  $Id: trrrem.rdl,v 2.0 2009/12/17 09:50:00 Exp $
%*** TRRREM.rdl
%***
%*** Copyright (c) 1999, Mincom Pty Ltd, Sydney, Australia.
%*** All rights reserved.
%***
%*** Localised version of MSRRAF for TransGrid use.
%*** Generated by hand from MSRRAF
%***
%***  Revision History
%***  ----------------
%***  26-Apr-13  M Cole      Version 0007
%***  ...................... Removed old unreferenced variables
%***  ...................... 
%***  09-Apr-13  M Cole      Version 0006
%***  ...................... Change medium from "E" to "M". 
%***  ...................... Replaced FDEE with FDEM
%***  ...................... for line 3 of TCOG header.
%***  28-Feb-13  mcole         (Version 0005)
%***  ...................... Change the length of request parameter
%***  ...................... CHEQUE-NO from 6 to 7.
%***  ...................... FUSR variable always uses the A07 variable
%***  27-Feb-13  mcole         (Version 0004)
%***  ...................... Changed again the filenaming
%***  ...................... logic for TCOG interface so that the 
%***  ...................... FUSR variable always uses the A07 variable
%***  ...................... plus the A06 variable plus the A12 variable
%***  ......................- so that the file to 
%***  ...................... TCOG will always have a filename that 
%***  ...................... consists of the 7 character EFT number 
%***  ...................... (which always starts with a 'B'), plus the
%***  ...................... supplier number plus the invoice number.
%***  ...................... This will make the TCOG filename unique for 
%***  ...................... Remittance Advices
%***  27-Feb-13  mcole         (Version 0003)
%***  ...................... Changed again the filenaming
%***  ...................... logic for TCOG interface so that the 
%***  ...................... FUSR variable always uses the A07 variable
%***  ...................... plus the A06 variable - so that the file to 
%***  ...................... TCOG will always have a filename that 
%***  ...................... consists of the cheque number plus the
%***  ...................... supplier number.
%***  ...................... The cheque number now has to cater for 
%***  ...................... being 7 characters long (not 6).
%***  ...................... Note that the information from Transgrid now
%***  ...................... is that this TRRREM process is only needed for 
%***  ...................... Accts Payable runs relating to EFT Payments,
%***  ...................... and not for  Accts Payable runs relating to
%***  ...................... physical cheques being printed. 
%***  19-Feb-13  mcole         (Version 0002)
%***  ...................... Changed email medium from "E" to "M"
%***  ...................... for Ellipse 8 and also changed filenaming
%***  ...................... logic for TCOG interface so that the 
%***  ...................... FUSR variable always uses the A01 variable
%***  ...................... plus the A06 variable - so that the file to 
%***  ...................... TCOG will always have a filename that 
%***  ...................... consists of the cheque RUN number plus the
%***  ...................... supplier number.   
%***  ...................... rather than sometimes using the A07 variable
%***  ...................... on its own (ie the cheque number) and sometimes
%***  ...................... using the A07 variable plus the A06 variable 
%***  ...................... if the cheque amount is less than zero (ie 
%***  ...................... there is no payment, but is a credit instead). 
%***  08-Aug-12  a9ir6369      MO164 (Version 0001)
%*** .......................  Reset version number to 0001 for E8 upgrade.
%***  17-Dec-09 E Fredeluces SC2617373
%***  ...................... Use the MSF282 ext-inv-no field to
%***  ...................... retrieve the valuation no.
%***  17-Mar-09 E Fredeluces SC2169522
%***  ...................... The cheque no. is not unique if it 
%***  ...................... is a credit note.  Add supplier
%**** ...................... no. to cheque no. in */USER=.
%***  16-Mar-09 E Fredeluces SC2169522
%***  ...................... Split the Remittance Advice for
%***  ...................... each cheque no.  Add the '*/USER='
%***  ...................... control. 
%***  03-Mar-09 E Fredeluces SC2169522
%***  ...................... Every new payment or cheque no. will
%***  ...................... be printed to the new page.
%***  10-Dec-08 E Fredeluces SC2169522
%***  ...................... Based on TRRRAF to be used by in-house
%***  ...................... developed faxing software. 
%***
%PROGRAM-ID
    TRRREM
%AUTHOR
    Mincom PTY LTD
%NARRATIVE
    Produce the EFT Remittance advice from MSB284 B report in a fax
    format for suppliers whose remittance advice is required in fax
    format.
%MODULE
    3260
%VERSION
    007
%FILES
    MFILE = MSF280
    AFILE = MSF281
    LFILE = MSF200
    LFILE = MSF203
    LFILE = MSF20A 
    AFILE = MSF282
    LFILE = MSF096
    LFILE = MSF26A
    LFILE = MSF260
    LFILE = MSF384
    LFILE = MSF38B
    RFILE = TRRREMA
%ROUTINES
    MSSATX
    MSSDAT
%SELECTION
    WHERE (ACCT-DSTRCT            = %ACCT-DSTRCT%, -
           BRANCH-CODE            = %BRANCH-CODE%, -
           BANK-ACCT-NO           = %BANK-ACCT-NO%, -
           CHEQUE-RUN-NO          = %CHEQUE-RUN-NO%, -
           INV-DSTRCT             = SPACES, -
           ORD-SUPPLIER-NO        = SPACES, -
           INV-NO                 = SPACES, -
           MCPRT-RUN-NO           = SPACES, -
           REC-TYPE               = '00', -
           SEQ-NO-MSF280         >= '00', -
           SEQ-NO-MSF280         <= '00')
%BREAK-FIELDS
   SUPCHQ 
%TITLE
'Remittance Advice'
%BREAK SUPCHQ HEADING
<IF FLG = 'Y'>
{FNOR      } 
{FDEF}{B01           }
{FDEM}{EML                                   }
{FDEM}I
{FUSR }{A07  }T{A06 }T{A12     }
%*
%*<IF A10 < 0>
%*{FUSR }{A07 }T{A06 } 
%*<ELSE>
%*{FUSR }{A07 }
%*
%*{FUSR }{A01 }T{A06 }
%*<ENDIF>


  


                               'Remittance Advice'
                               '================='

                             'Our Cheque No '{A07  }


       {B19                           }      'Facsimile:'     {B01          }
       {B20                           }      'Supplier Code:' {A06  }
       {B21                           }      'Date:' {A99   }
       {B22                           }
       {B23                           }
       {B24       }


'Invoice No.           Date                Amount     S/Disc.             Nett'
'==================    ========         =========    ========     ============'
<ENDIF>
%DETAIL
<IF FLG  = 'Y'>
 {INVCON            }  {C11    }    {C10B       }    {C06   }    {E99        }
     <IF INVHDRTEXT <> SPACES> 
  {INVHDRTEXT                                                                }
     <ENDIF>
 <REPEAT>
 <SUPPRESS>
  {EXLINE                                                                    }
 <ENDREPEAT>
<ENDIF>

%BREAK SUPCHQ FOOTING
<IF FLG = 'Y'>
                                                                '=============' 
      <IF A15A > 0>
 'Account to be Credited:'{C03  } {C02               }           {A15A       }
 '( With Reference' {A06 }{A07  }')'                            '=============' 
      <ELSE>
 '*** No Payment Necessary - Zero/Credit Balance ***'            {A15A       }
                                                                '=============' 
      <ENDIF>

{FEND   }
{FSTOP  }
<ENDIF>
%CONTROL REPORT A
    PAGE-WIDTH = 80
    TRIM-REPORT
    NO-STD-HEADINGS
    PAGE-LENGTH = 99999

%REQUEST-PARAMETERS
    ACCT-DSTRCT     PIC (X(4))  TEXT Accounting District
    BRANCH-CODE     PIC (X(15)) TEXT Branch Code
    BANK-ACCT-NO    PIC (X(20)) TEXT Bank Account Number
    CHEQUE-RUN-NO   PIC (X(6))  TEXT Cheque Run Number
    CHEQUE-NO       PIC (X(7))  TEXT Cheque Number

%VARIABLES
%*                                   Constants
    T     = '-'          CONSTANT
    FNOR  =  '*/GO /NOR' CONSTANT
    FDEF  =  '*/DE=F'    CONSTANT
    FDEM  =  '*/DE=M'    CONSTANT
    FUSR  = '*/USER='    CONSTANT
    FEND  =  '*/END'     CONSTANT
    FSTOP =  '*/STOP'    CONSTANT
    A99   = WX-TODAYS-DATE FORMAT (DATE)  CONSTANT
%*                                   MSF281  
    A01 = CHEQUE-RUN-NO FROM MSF281           -
    WHERE    (PAY-RUN-ID     = CHEQUE-RUN-NO, -
              ACCT-DSTRCT    = ACCT-DSTRCT,   -
              BRANCH-CODE    = BRANCH-CODE,   -
              BANK-ACCT-NO   = BANK-ACCT-NO,  -
              CHEQUE-RUN-NO >= CHEQUE-RUN-NO, -
              CHEQUE-RUN-NO <= CHEQUE-RUN-NO) - 
    REJECTIF (CHEQUE-NO     <> %CHEQUE-NO%,   -
              %CHEQUE-NO%    > SPACES) 
    A02 = HANDLE-CDE VIA (A01)
    A03 = BANK-ACCT-NO VIA (A01)
    A04 = BRANCH-CODE VIA (A01)
    A05 = ACCT-DSTRCT VIA (A01)
    A06 = SUPP-TO-PAY VIA (A01)
    A00 = CHOOSE(A06  IF (%BANK-ACCT-NO% <> SPACES ) , A06 )
    A07 = CHEQUE-NO VIA   (A01)
    A08 = CHOOSE(A07  IF (%BANK-ACCT-NO% <> SPACES ) , A07 )
    A10 = CHQ-AMOUNT VIA (A01) 
    A11 = INV-DSTRCT VIA (A01)
    A12 = INV-NO VIA (A01)
    A13 = SUPP-TO-PAY VIA (A01)
%*    A14 = CHOOSE(A10  IF (A10 > 0 ) , 0 )
    A15  = TOTAL( A10 )
    A15A = CALC( A15 * 1 ) I-PIC (S9(10)V99) D-PIC ( ZZZZZZZZ9.99- )
    A    = CATENATE (A06,A07)
    SUPCHQ = CHOOSE (A IF (A <> SPACES), A)
%*                                               MSF200
    B01 = PAY-FAX-NO OF MSF200 - 
    WHERE (SUPPLIER-NO            = A06)
    B02 = PAYMENT-CTACT VIA (B01)
    B03 = PAYMENT-NAME VIA (B01)
    B04 = PAYMENT-ADDR-1 VIA (B01)
    B05 = PAYMENT-ADDR-2 VIA (B01)
    B06 = PAYMENT-ADDR-3 VIA (B01)
    B07 = PAYMENT-PCODE VIA (B01)
%*
    B10 = ORDER-CONTACT VIA (B01)
    B11 = SUPPLIER-NAME VIA (B01)
    B12 = ORDER-ADDR-1 VIA (B01)
    B13 = ORDER-ADDR-2 VIA (B01)
    B14 = ORDER-ADDR-3 VIA (B01)
    B15 = ORDER-PCODE VIA (B01)
%*
    B19 = CHOOSE(B02  IF (B02 <> SPACES ) , B10 )
    B20 = CHOOSE(B03  IF (B03 <> SPACES ) , B11 )
%*
    B21 = CHOOSE(B04  IF (B04 <> SPACES ) , B12 )
    B22 = CHOOSE(B05  IF (B04 <> SPACES ) , B13 )
    B23 = CHOOSE(B06  IF (B04 <> SPACES ) , B14 )
    B24 = CHOOSE(B07  IF (B04 <> SPACES ) , B15 )
%*                                                MSF203
    C01 = REMIT-MEDIUM-IND OF MSF203 -
    WHERE (DSTRCT-CODE            = ACCT-DSTRCT, -
           SUPPLIER-NO            = A06)
    C02 = BANK-ACCT-NO VIA (C01)
    C03 = BRANCH-CODE VIA (C01)
    I   = REMIT-MEDIUM-IND VIA (C01)
%*
    FLG = CHOOSE ('Y' IF (I = 'F'),-
%*                  'Y' IF (I = 'E'),-
                  'Y' IF (I = 'M'),-
                  'N') 
%*                                                MSF20A
    EML = PAY-EMAIL-ADDR OF MSF20A -
    WHERE (SUPPLIER-NO = A06)
%*                                                MSF282
    C04 = INV-DSTRCT FROM MSF282 -
    WHERE (ACCT-DSTRCT            = A05, -
           BRANCH-CODE            = A04, -
           BANK-ACCT-NO           = A03, -
           CHEQUE-RUN-NO          = A01, -
           HANDLE-CDE             = A02, -
           SUPP-TO-PAY           >= A06, -
           SUPP-TO-PAY           <= A06) -
    START (ACCT-DSTRCT            = A05, -
           BRANCH-CODE            = A04, -
           BANK-ACCT-NO           = A03, -
           CHEQUE-RUN-NO          = A01, -
           HANDLE-CDE             = A02, -
           SUPP-TO-PAY            = A06, -
           INV-DSTRCT             = A11, -
           ORD-SUPPLIER-NO        = A13, -
           INV-NO                 = A12) -
    STOPIF   (A11 <> SPACES AND INV-DSTRCT <> A11) -
    STOPIF   (A13 <> SPACES AND ORD-SUPPLIER-NO <> A13) -
    STOPIF   (A12 <> SPACES AND INV-NO <> A12)
    C05 = ORD-SUPPLIER-NO VIA (C04)
    C06 = SD-AMOUNT VIA (C04) D-PIC ( ZZZZ9.99 BLANK WHEN ZERO )
    C07 = PP-AMOUNT VIA (C04) D-PIC ( ZZZZ9.99 BLANK WHEN ZERO )
    C8  = EXT-INV-NO VIA (C04)
    C08 = CHOOSE (C8 IF (C8 <> SPACES), C8)
    C09 = INV-NO VIA (C04)

    C10  = INV-AMOUNT VIA (C04) 
    C10A = CALC( C10 * 1 ) I-PIC (S9(10)V99)
    C10B = C10A D-PIC ( ZZZZZZZZ9.99- )

    C11 = INV-DATE VIA (C04) FORMAT (DATE)
%*-----------------------------------------------------------------------------------
%* Assumptions:
%* The retrieval of the contract valuation no. hinges on the
%* format of the MSF282 (Payments AP) file ext-inv-no
%* (external invoice number) field.  The expected format:
%*       ccccccccPppVvvvv     (maximum value)
%*       ccccPpVvvvv          (minimum value)
%*
%* Where: c is the contract no. (minimum chars of 4)
%*        P (uppercase) is the literal 'P' for portion
%*        p (lowercase) is portion no. (minimum numeric char of 1)
%*        V (uppercase) is the literal 'V' for valuation no.
%*        v  (lowercase) is the valuation no. (numeric chars of 4)
%* The valuation number will be used to retrieve the invoice number of the contract.
%*-----------------------------------------------------------------------------------
%* To determine the position of literal 'V' in the ext-inv-no field
%* To determine the position of literal 'V' in the ext-inv-no field
    EXIN-P-7  = substr (C8,7,1)
    EXIN-P-8  = substr (C8,8,1)
    EXIN-P-9  = substr (C8,9,1)
    EXIN-P-10 = substr (C8,10,1)
    EXIN-P-11 = substr (C8,11,1)
    EXIN-P-12 = substr (C8,12,1)
%*
%* To retrieve the 4-digit numeric valuation no. after the 'V' literal
%* Example: If the literal 'V' is in EXIN-P-7 (Pos 7) then
%*          the 4-digit valuation no. is in VALN-P-7.
   VALN-P-7   = substr (C8,8,4)
   VALN-P-8   = substr (C8,9,4)
   VALN-P-9   = substr (C8,10,4)
   VALN-P-10  = substr (C8,11,4)
   VALN-P-11  = substr (C8,12,4)
   VALN-P-12  = substr (C8,13,4)
%*
   EXIN-VALN  = choose (VALN-P-7  IF (EXIN-P-7  = 'V'), -
                        VALN-P-7  IF (EXIN-P-7  = 'v'), - 
                        VALN-P-8  IF (EXIN-P-8  = 'V'), -
                        VALN-P-8  IF (EXIN-P-8  = 'v'), - 
                        VALN-P-9  IF (EXIN-P-9  = 'V'), -
                        VALN-P-9  IF (EXIN-P-9  = 'v'), - 
                        VALN-P-10 IF (EXIN-P-10 = 'V'), -
                        VALN-P-10 IF (EXIN-P-10 = 'v'), - 
                        VALN-P-11 IF (EXIN-P-11 = 'V'), -
                        VALN-P-11 IF (EXIN-P-11 = 'v'), - 
                        VALN-P-12 IF (EXIN-P-12 = 'V'), -
                        VALN-P-12 IF (EXIN-P-12 = 'v'), - 
                        '****')
%*                                           MSF096 
   LINE1-A    = STD-TEXT-REC-X-1 OF MSF096    -
                WHERE (STD-TEXT-CODE = 'IX',  -
                       STD-KEY       = C04 &  -
                                       A06 &  -
                                       C09,   -
                        STD-LINE-NO >= SPACES)-
                        MAX (1)
   LINE1-B    = INDEX (LINE1-A, '.HEADING')
   LSTART     = CALC (LINE1-B + 9) I-PIC (99)
   LINE1-C    = SUBSTR (LINE1-A, LSTART, 60)
   INVHDRTEXT = CHOOSE (LINE1-C IF (LINE1-B > 0), SPACES) I-PIC (X(60))

%*  This routines skips the record commening with
%*                .HEADING
%*                  
    M096 = GET (READ-TEXT FROM ('MSF096') CODE ('IX') -
                    KEY (C04,A06,C09))                -
                    MAX (40)                          -
                    TEXT-WIDTH (60)

    EXLINE = PUT (M096) MAX (40)    
%*
    A16 = PO-NO       OF MSF26A            -
          WHERE    (DSTRCT-CODE  = C04,    -
                    SUPPLIER-NO  = A06,    -
                    INV-NO       = C09,    -
                    INV-ITEM-NO >= '000')  -
          REJECTIF (INV-ITEM-NO  = '000') MAX (1)

   A17 = INV-ITEM-NO    VIA (A16)
%*                                                  MSSATX
    D01 = DEDUCT-TAX-F OF MSSATX -
          WHERE (OPTION-ATX             = 'A', -
                 DSTRCT-CODE            = C04, -
                 SUPPLIER-NO            = A06, -
                 INV-NO                 = C09, -
                 BASE-VALUE-F           = C10)
    D02 = SUPP-NIV-TAX-F VIA (D01)
    D03 = DEDUCT-TAX-F VIA (D01)
    D04 = SUPP-NIV-TAX-F VIA (D01)
%*
    TAXA= FOR-ATAX-T-A OF MSF260           -
          WHERE    (DSTRCT-CODE  = C04,    -
                    SUPPLIER-NO  = A06,    -
                    INV-NO       = C09)
    CTNO= CONTRACT-NO  VIA (TAXA)

%*  
    INVT = INV-TYPE VIA (TAXA)
    
%*                                                 CALCS.
    E99 = CALC (C10 - C06 - C07 - D03 + D04 ) I-PIC (S9(10)V99) -
          D-PIC (ZZZZZZZZ9.99-)

    CTNO-VALN = LAST-VALN OF MSF384 -         
    WHERE (CONTRACT-NO = CTNO)                     

%*
%*   If the EXIN-VALN is not valid use the
%*          CTNO or the last valuation no. from the Contract

     VALN = CHOOSE (CTNO-VALN IF (EXIN-VALN = '****'), -
                    CTNO-VALN IF (EXIN-VALN = ' '),    -
                    EXIN-VALN)

    EXIN = EXT-INV-NO OF MSF38B -         
    WHERE (CONTRACT-NO = CTNO, -
           VALN-NO     = VALN)                     



   INVCON = CHOOSE (EXIN IF (INVT = '6'), C08)

%*
%******************** End TRRREM.RDL *******************
